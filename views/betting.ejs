<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <title>Betslip</title>

    <!-- <script>
      // Function to generate a unique ID
      function generateUniqueId(length) {
        return crypto.randomBytes(length).toString('hex');
      }
    
      // Function to set the generated ID in the hidden input field
      function setGeneratedId() {
        const generatedId = generateUniqueId(18); // Adjust the length as needed
        $('#generatedId').val(generatedId);
      }
    
      // Call setGeneratedId() to set the ID when the page loads or as needed
      setGeneratedId();
    
      // Handle form submission
      $('form').on('submit', function (e) {
        e.preventDefault();
    
        // Submit the form to your API system
        $.ajax({
          type: 'POST',
          url: 'http://localhost:3000/api/api',
          data: $(this).serialize(), // Serialize the form data
          success: function (response) {
            // Handle the API response (e.g., display a success message)
            console.log('API Response:', response);
    
            // Continue by sending a request to your own backend route with the generatedId
            const generatedId = response.generatedId;
            fetch('http://localhost:8085/betting/betting', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ generatedId /* other data you want to send */ }),
            })
              .then((response) => response.json())
              .then((data) => {
                // Handle the response from localhost:8085/betting/betting if needed
                console.log('Response from localhost:8085/betting/betting:', data);
              })
              .catch((error) => {
                // Handle errors if any
                console.error('Error:', error);
              });
          },
          error: function (error) {
            // Handle errors (e.g., display an error message)
            console.error('API Error:', error);
          },
        });
      });
    </script> -->
    <style>
        body{
            background-color: #212529;
        }
        a{
            color: white;
            text-decoration-line: none;
            padding-right:2000px ;
        }
        h3{
            color: white;
            text-align: center;
        }
        .navbar{
            height: 10%;
        }
        .row{
            margin-top: 150px;
            margin-left: 10px;
            margin-right: 10px;
        }
        p{
            color: white;
            text-align: center;
            font-size: 20px;
        }
        h5{
            color: white;
            text-align: center;
        }
        .row-2{
            padding: 10px;
            font-size: 25px;
            
        }
        select {
            display: inline-block;
           padding-left: 120px;
           margin-left: 1050px;
        }
        table{
            width: 80%;
            color: white;
            margin-left: 10px;
           margin-right: 10px;
        }
        th{
            color: white;
        }
        
        button[type=submit]{
            width: 500px;
            height: 45px;
            margin: auto;
            margin-top: -105px;
            border-radius: 11px;
            background-color: #e2e2e2;
            color: rgb(0, 0, 0);
        }
        button[type=button]:hover {
    background-color: yellow;
    border-radius: 11px;
    .delete-button {
    padding: 0.25rem 0.5rem; /* Adjust padding as needed */
    font-size: 0.8rem; /* Adjust font size as needed */
    line-height: 1; /* Adjust line height as needed */
    vertical-align: middle; /* Align the button vertically */
  }
}
    </style>
</head>
<body>
    <nav class="navbar navbar-dark bg-dark fixed-top">
        <div class="container-fluid">
            
           <h3> Playing </h3>
          <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasDarkNavbar" aria-controls="offcanvasDarkNavbar" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="offcanvas offcanvas-end text-bg-dark" tabindex="-1" id="offcanvasDarkNavbar" aria-labelledby="offcanvasDarkNavbarLabel">
            
            <div class="offcanvas-body">
                <table>
                    <thead>
                      <tr>
                      
                      </tr>
                    </thead>
                    <tbody>
                      <% markets.forEach(function(market) { %>
                        <tr>
                         
                          <td>
                            <table>
                              <thead>
                                <tr>
                                  <% market.names.forEach(function(marketname) { %>
                                    <th><%= marketname %></th>
                                  <% }) %>
                                </tr>
                              </thead>
                              <tbody>
                                <!-- Add data rows for the market -->
                                <tr>
                                  <td>0.25</td>
                                  <td>8.4</td>
                                  <td>9.3</td>
                                </tr>
                                <!-- Add more rows as needed -->
                              </tbody>
                            </table>
                          </td>
                        </tr>
                      <% }) %>
                      <!-- Add more rows as needed -->
                    </tbody>
                  </table>
            </div>
          </div>
        </div>
      </nav>
     
      <!-- <form action="http://localhost:3000/api/api" method="post"> -->
        <form action="/betting/betting" method="post">
          <div class="row bg-dark">
              <div class="col">
                  <!-- Your code here -->
              </div>
          </div>
      
          <table class="table">
              <thead>
                  <tr>
                      <th scope="col">Nr</th>
                      <th scope="col">Market</th>
                      <th scope="col">Price</th>
                      <th scope="col">Home Team</th>
                      <th scope="col">Away Team</th>
                      <th scope="col">Actions</th>
                  </tr>
              </thead>
              <tbody style="color: white;">
                  <% bets.forEach(function(bet, index) { %>
                  <tr>
                      <th scope="row"><%= index + 1 %></th>
                      <td><%= bet.name %></td>
                      <td><%= bet.price %></td>
                      <td><%= bet.hometeam %></td>
                      <td><%= bet.awayteam %></td>
                      <td>
                          <button type="button" class="btn btn-danger delete-button" data-id="<%= bet.id %>">Delete</button>
                      </td>
                  </tr>
                  <% }); %>
              </tbody>
          </table>
          <input type="hidden" name="generatedId" id="generatedId" value="">
          <input type="number" id="numberInput" name="amount_betslip">
          <!-- Dropdown menu for selecting currency -->
          <select name="currency" id="currency">
            <option value="USD">USD</option>
            <option value="EUR">EUR</option>
            <option value="ALL" selected>ALL</option>
        </select>
        <br>
        <button onclick="setInputValue(100); event.preventDefault()">100</button>
        <button onclick="setInputValue(500); event.preventDefault()">500</button>
        <button onclick="setInputValue(1000); event.preventDefault()">1000</button>
        <button onclick="setInputValue('Type'); event.preventDefault()">Type</button>
        <br>
      
          <div class="row bg-dark">
              <button type="submit">Confirm bet</button>
          </div>
      </form>
      
      
      <script>
        // Add an event listener to each delete button
document.querySelectorAll('.delete-button').forEach(button => {
  button.addEventListener('click', function() {
    const betId = this.getAttribute('data-id');
    const confirmDelete = confirm('Are you sure you want to delete this bet?');

    if (confirmDelete) {
      fetch(`/betting/betting?delete=true&betId=${betId}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => {
        if (response.ok) {
          // Reload the page after successful deletion
          window.location.reload();
        } else {
          console.error('Failed to delete the bet');
        }
      })
      .catch(error => {
        console.error('Error while deleting the bet:', error);
      });
    }
  });
});

        function setInputValue(value) {
          document.getElementById("numberInput").value = value;
        }
     
    // Function to fetch real-time exchange rates and update amount field
  
      function updateAmountValue() {
    var amountInput = document.getElementById("numberInput");
    var currencySelect = document.getElementById("currency");
    var currencyValue = currencySelect.value;

    // Fetch real-time exchange rates from the API
    fetch("https://api.exchangerate-api.com/v4/latest/" + currencyValue)
        .then(response => response.json())
        .then(data => {
            // Get the conversion rate for the selected currency
            var conversionRate = data.rates[currencyValue];

            // Get the amount value and currency from the input box
            var amountValue = parseFloat(amountInput.value);
            var currentCurrency = amountInput.getAttribute("data-currency");

            // Convert the amount value if the currency has changed
            if (currentCurrency !== currencyValue && currentCurrency !== null) {
                var allRate = data.rates["ALL"];
                if (currencyValue === "ALL") {
                    amountInput.value = (amountValue / allRate).toFixed(2);
                } else {
                    amountInput.value = (amountValue * conversionRate / allRate).toFixed(2);
                }
            }

            // Update data attributes
            amountInput.setAttribute("data-original-value", amountInput.value);
            amountInput.setAttribute("data-currency", currencyValue);
        })
        .catch(error => {
            console.error("Error fetching exchange rates:", error);
        });
}

    // Attach event listener to currency select element
    document.getElementById("currency").addEventListener("change", updateAmountValue);

    // Initial call to update amount value when page loads
    updateAmountValue();
      </script>
      
      <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
      <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
</body>
</html>